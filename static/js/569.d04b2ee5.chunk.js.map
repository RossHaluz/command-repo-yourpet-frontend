{"version":3,"file":"static/js/569.d04b2ee5.chunk.js","mappings":"+PAEaA,E,OAAYC,EAAAA,KAAH,gJ,SCIhBC,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,GACG,oBACPC,MAAM,wBACNC,SAAS,qBACZC,SAAUH,EAAAA,GAAW,uBAAuBE,SAAS,0BAmDvD,EAhDkB,WAChB,IAAME,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbL,MAAO,GACPE,SAAU,IAEZJ,iBAAkBA,EAClBQ,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACnBC,QAAQC,IAAIH,GACZC,GACD,IAGH,OACE,iCACE,UAACZ,EAAD,CAAWU,SAAUH,EAAOQ,aAA5B,WACE,SAACC,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAOd,EAAOI,OAAOP,MACrBkB,SAAUf,EAAOgB,aACjBC,MAAOjB,EAAOkB,QAAQrB,OAASsB,QAAQnB,EAAOoB,OAAOvB,OACrDwB,WAAYrB,EAAOkB,QAAQrB,OAASG,EAAOoB,OAAOvB,SAEpD,SAACY,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNS,KAAK,WACLR,MAAOd,EAAOI,OAAOL,SACrBgB,SAAUf,EAAOgB,aACjBC,MAAOjB,EAAOkB,QAAQnB,UAAYoB,QAAQnB,EAAOoB,OAAOrB,UACxDsB,WAAYrB,EAAOkB,QAAQnB,UAAYC,EAAOoB,OAAOrB,YAEvD,SAACwB,EAAA,EAAD,CAAQD,KAAK,SAASE,QAAQ,YAA9B,uBAIF,UAACC,EAAA,EAAD,CAAYC,UAAU,IAAIC,GAAI,CAAEC,UAAW,SAAUC,GAAI,QAAzD,4CACgC,SAAC,KAAD,CAASC,GAAG,YAAZ,2BAIrC,ECtDD,EAJkB,WAChB,OAAO,SAAC,EAAD,GACR,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormLogin = styled.form`\n  max-width: 350px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin: 0 auto;\n  margin-top: 25px;\n`;\n","import { Button, TextField, Typography } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { FormLogin } from './LoginForm.styled';\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valide email')\n    .required('Email is required'),\n  password: yup.string('Enter your password').required('Password is required'),\n});\n\nconst LoginForm = () => {\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      console.log(values);\n      resetForm();\n    },\n  });\n\n  return (\n    <>\n      <FormLogin onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button type=\"submit\" variant=\"contained\">\n          Login\n        </Button>\n      </FormLogin>\n      <Typography component=\"p\" sx={{ textAlign: 'center', mt: '15px' }}>\n        If you don't have an account. <NavLink to=\"/register\">Register</NavLink>\n      </Typography>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm';\n\nconst LoginPage = () => {\n  return <LoginForm />;\n};\n\nexport default LoginPage;\n"],"names":["FormLogin","styled","validationSchema","yup","email","required","password","formik","useFormik","initialValues","onSubmit","values","resetForm","console","log","handleSubmit","TextField","fullWidth","id","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","variant","Typography","component","sx","textAlign","mt","to"],"sourceRoot":""}