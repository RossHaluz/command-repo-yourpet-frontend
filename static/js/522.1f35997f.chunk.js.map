{"version":3,"file":"static/js/522.1f35997f.chunk.js","mappings":"+PAEaA,E,OAAeC,EAAAA,KAAH,gJ,SCInBC,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,GACG,oBACPC,MAAM,wBACNC,SAAS,qBACZC,SAAUH,EAAAA,GACA,uBACPI,IAAI,EAAG,sDACPF,SAAS,0BAoDd,EAjDoB,WAClB,IAAMG,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbN,MAAO,GACPE,SAAU,IAEZJ,iBAAkBA,EAClBS,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACnBC,QAAQC,IAAIH,GAEZC,GACD,IAGH,OACE,iCACE,UAACb,EAAD,CAAcW,SAAUH,EAAOQ,aAA/B,WACE,SAACC,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAOd,EAAOI,OAAOR,MACrBmB,SAAUf,EAAOgB,aACjBC,MAAOjB,EAAOkB,QAAQtB,OAASuB,QAAQnB,EAAOoB,OAAOxB,OACrDyB,WAAYrB,EAAOkB,QAAQtB,OAASI,EAAOoB,OAAOxB,SAEpD,SAACa,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNC,MAAOd,EAAOI,OAAON,SACrBiB,SAAUf,EAAOgB,aACjBC,MAAOjB,EAAOkB,QAAQpB,UAAYqB,QAAQnB,EAAOoB,OAAOtB,UACxDuB,WAAYrB,EAAOkB,QAAQpB,UAAYE,EAAOoB,OAAOtB,YAGvD,SAACwB,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,YAA9B,0BAIF,UAACC,EAAA,EAAD,CAAYC,UAAU,IAAIC,GAAI,CAAEC,UAAW,SAAUC,GAAI,QAAzD,sCAC0B,SAAC,KAAD,CAASC,GAAG,SAAZ,wBAI/B,EC1DD,EAJqB,WACnB,OAAO,SAAC,EAAD,GACR,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormRegister = styled.form`\n  max-width: 350px;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin: 0 auto;\n  margin-top: 25px;\n`;\n","import { Button, TextField, Typography } from '@mui/material';\nimport { NavLink } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { FormRegister } from './RegisterForm.styled';\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valide email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(3, 'Password should be of minimum 3 characters length ')\n    .required('Password is required'),\n});\n\nconst RegisteForm = () => {\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      console.log(values);\n\n      resetForm();\n    },\n  });\n\n  return (\n    <>\n      <FormRegister onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n\n        <Button type=\"submit\" variant=\"contained\">\n          Register\n        </Button>\n      </FormRegister>\n      <Typography component=\"p\" sx={{ textAlign: 'center', mt: '15px' }}>\n        If tou have an account. <NavLink to=\"/login\">Login</NavLink>\n      </Typography>\n    </>\n  );\n};\n\nexport default RegisteForm;\n","import RegisteForm from 'components/RegisterForm';\n\nconst RegisterPage = () => {\n  return <RegisteForm />;\n};\n\nexport default RegisterPage;\n"],"names":["FormRegister","styled","validationSchema","yup","email","required","password","min","formik","useFormik","initialValues","onSubmit","values","resetForm","console","log","handleSubmit","TextField","fullWidth","id","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","Button","type","variant","Typography","component","sx","textAlign","mt","to"],"sourceRoot":""}